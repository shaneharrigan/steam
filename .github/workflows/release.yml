name: Release on Merge to Main

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history is available for tagging

      - name: Set up Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: "6.0.2"

      - name: Run Swift Tests
        run: swift test --enable-test-discovery

  release:
    name: Create Release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures all tags are fetched
    
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/shaneharrigan/steam.git

      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          if [[ -z "$latest_tag" ]]; then
            latest_tag="v1.0.0"
          fi
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          echo "Latest tag: $latest_tag"

      - name: Increment Version
        id: increment_version
        run: |
          latest_tag="${{ env.LATEST_TAG }}"
          IFS='.' read -r -a version_parts <<< "${latest_tag//v/}"
          new_version="v${version_parts[0]}.${version_parts[1]}.$((version_parts[2] + 1))"
          echo "NEW_TAG=$new_version" >> $GITHUB_ENV
          echo "New version: $new_version"

      - name: Create Git Tag
        run: |
          git tag -a ${{ env.NEW_TAG }} -m "Release ${{ env.NEW_TAG }}"
          git push origin ${{ env.NEW_TAG }}

      - name: Package Release Files
        run: |
          mkdir release
          echo "Release contents go here" > release/README.txt
          zip -r release.zip release/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GITHUB_TOKEN for authentication
        run: |
          gh release create ${{ env.NEW_TAG }} release.zip \
            --generate-notes \
            --title "Version ${{ env.NEW_TAG }}"

